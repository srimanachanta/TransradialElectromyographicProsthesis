import os.path
import numpy as np


def generate_and_save_y_data(data_dir: str, y_file_name: str, sample_count: int, sampling_rate_sps: int, joint_actions: list[list[tuple[float, int]]]):
    data = np.zeros((11, sample_count))

    for i, joint_action_list in enumerate(joint_actions):
        for timestamp_seconds, action_class in joint_action_list:
            frame_idx = int(timestamp_seconds * sampling_rate_sps)
            data[i, frame_idx:] = action_class

    out_path = os.path.join(data_dir, y_file_name)
    np.save(out_path, data)


def get_dataset_meta(data_dir: str, x_file_name: str, video_len_seconds: float):
    data = np.load(os.path.join(data_dir, x_file_name))
    num_samples = data.shape[1]
    return {
        "sample_count": num_samples,
        "sampling_rate_sps": num_samples // video_len_seconds
    }


if __name__ == "__main__":
    y_name = "finger_state.npy"

    generate_and_save_y_data("data/solo_finger", y_name, **get_dataset_meta("data/solo_finger", "muscle_data.npy", video_len_seconds=13.401), joint_actions=[
        [(1.602, 1), (2.201, 0), (2.768, 2), (2.868, 0)],
        [(1.735, 1), (2.201, 0), (2.478, 2), (3.002, 0)],
        [(3.875, 1), (4.037, 0), (4.803, 2), (4.945, 0)],
        [(3.825, 1), (4.103, 0), (4.837, 2), (5.070, 0)],
        [(5.803, 1), (6.103, 0), (7.105, 2), (7.338, 0)],
        [(5.737, 1), (6.370, 0), (7.016, 2), (7.505, 0)],
        [],
        [],
        [(9.292, 1), (8.505, 0), (9.473, 2), (9.673, 0)],
        [(8.274, 1), (8.705, 0), (9.440, 2), (9.840, 0)],
        []])
    generate_and_save_y_data("data/thumb_duo", y_name, **get_dataset_meta("data/thumb_duo", "muscle_data.npy", video_len_seconds=10.468), joint_actions=[
        [(2.000, 1), (2.367, 0), (3.033, 2), (3.200, 0), (4.367, 1), (4.4, 0), (5.400, 2), (5.600, 0), (6.868, 1), (7.268, 0), (8.168, 2), (8.202, 0)],
        [(2.003, 1), (2.400, 0), (3.033, 2), (3.267, 0), (4.333, 1), (4.687, 0), (5.400, 2), (5.902, 0), (6.799, 1), (7.368, 0), (8.102, 2), (8.468, 0)],
        [(2.000, 1), (2.267, 0), (3.033, 2), (3.167, 0)],
        [(1.991, 1), (2.367, 0), (3.00, 2), (3.200, 0)],
        [(4.113, 1), (4.687, 0), (5.467, 2), (5.567, 0)],
        [(4.133, 1), (4.733, 0), (5.400, 2), (5.835, 0)],
        [],
        [],
        [(6.980, 1), (7.168, 0), (8.187, 2), (8.302, 0)],
        [(6.902, 1), (7.668, 0), (8.068, 2), (8.435, 0)],
        []])
    generate_and_save_y_data("data/index_duo", y_name, **get_dataset_meta("data/index_duo", "muscle_data.npy", video_len_seconds=10.833), joint_actions=[
        [(1.000, 1), (1.200, 0), (2.100, 2), (2.200, 0), (3.700, 1), (3.715, 0), (3.933, 2), (4.067, 0), (5.000, 1), (5.100, 0), (5.300, 2), (5.367, 0)],
        [(1.067, 1), (1.367, 0), (1.900, 2), (2.300, 0), (3.667, 1), (3.767, 0), (3.800, 2), (4.067, 0), (4.967, 1), (5.200, 0), (5.267, 2), (5.367, 0), (6.668, 1), (6.868, 0), (7.902, 2), (8.502, 0)],
        [(1.100, 1), (1.200, 0), (1.967, 2), (2.167, 0), (3.733, 1), (4.000, 0), (5.067, 2), (5.233, 0), (6.668, 1), (6.835, 0), (8.068, 2), (8.268, 0)],
        [(1.000, 1), (1.367, 0), (1.900, 2), (2.300, 0), (3.600, 1), (4.167, 0), (5.003, 2), (5.400, 0), (6.735, 1), (7.035, 0), (8.135, 2), (8.302, 0)],
        [(3.733, 1), (3.967, 0), (5.067, 2), (5.233, 0)],
        [(3.600, 1), (4.167, 0), (5.003, 2), (5.400, 0)],
        [],
        [],
        [(6.668, 1), (6.835, 0), (8.168, 2), (8.335, 0)],
        [(6.668, 1), (7.035, 0), (8.202, 2), (8.435, 0)],
        []])
    generate_and_save_y_data("data/middle_duo", y_name, **get_dataset_meta("data/middle_duo", "muscle_data.npy", video_len_seconds=5.733), joint_actions=[
        [(2.400, 1), (2.667, 0)],
        [(0.400, 1), (0.867, 0), (1.100, 2), (1.567, 0), (2.700, 1), (2.717, 0), (2.733, 2), (2.933, 0), (3.567, 1), (3.800, 0), (3.812, 2), (3.967, 0)],
        [(2.767, 1), (3.000, 0), (3.667, 2), (3.767, 0)],
        [(0.467, 1), (0.533, 0), (2.700, 1), (3.100, 0), (3.633, 2), (3.833, 0)],
        [(0.567, 1), (0.733, 0), (1.365, 2), (1.433, 0), (2.767, 1), (3.000, 0), (3.667, 2), (3.767, 0)],
        [(0.467, 1), (0.833, 0), (1.300, 2), (1.500, 0), (2.700, 1), (3.100, 0), (3.633, 2), (3.833, 0)],
        [],
        [],
        [],
        [],
        []])
    generate_and_save_y_data("data/pinkie_duo", y_name, **get_dataset_meta("data/pinkie_duo", "muscle_data.npy", video_len_seconds=5.2), joint_actions=[
        [(0.267, 1), (0.333, 0)],
        [(0.233, 1), (0.433, 0), (0.967, 2), (1.200, 0), (1.800, 1), (2.400, 0), (3.100, 2), (3.433, 0)],
        [(1.900, 1), (2.033, 0), (3.133, 2), (3.267, 0)],
        [(1.767, 1), (2.367, 0), (3.067, 2), (3.333, 0)],
        [],
        [],
        [],
        [],
        [(0.167, 1), (0.367, 0), (0.933, 2), (1.033, 0), (1.767, 1), (2.000, 0), (3.133, 2), (3.267, 0)],
        [(0.100, 1), (0.433, 0), (0.700, 2), (1.100, 0), (1.600, 1), (2.367, 0), (3.000, 2), (3.330, 0)],
        []])
    generate_and_save_y_data("data/solo_press", y_name, **get_dataset_meta("data/solo_press", "muscle_data.npy", video_len_seconds=7.268), joint_actions=[
        [(0.300, 1), (0.400, 0)],
        [(0.367, 1), (0.600, 0), (0.660, 2), (0.800, 0)],
        [(1.600, 1), (1.700, 0)],
        [(1.533, 1), (1.789, 0), (1.800, 2), (1.933, 0)],
        [(2.757, 1), (2.867, 0)],
        [(2.567, 1), (2.867, 0), (2.9, 2), (3.0, 0)],
        [(3.667, 1), (3.767, 0)],
        [(3.600, 1), (3.933, 0), (3.951, 2), (4.033, 0)],
        [(4.900, 1), (5.00, 0)],
        [(4.867, 1), (5.100, 0), (5.113, 1), (5.267, 0)],
        []])
    generate_and_save_y_data("data/thumb_duo_press", y_name, **get_dataset_meta("data/thumb_duo_press", "muscle_data.npy", video_len_seconds=8.768), joint_actions=[
        [(6.002, 1), (6.068, 0)],
        [(1.367, 1), (1.667, 0), (1.833, 2), (1.967, 0), (2.933, 1), (3.267, 0), (3.467, 2), (3.667, 0), (4.500, 1), (4.800, 0), (4.867, 2), (5.167, 0), (6.035, 1), (6.202, 0), (6.302, 2), (6.702, 0)],

        [],
        [(1.467, 1), (1.800, 0), (1.833, 2), (1.967, 0)],
        [],
        [(3.067, 1), (3.500, 0), (3.533, 2), (3.667, 0)],
        [],
        [(4.567, 1), (5.033, 0), (5.067, 2), (5.167, 0)],
        [],
        [(5.968, 1), (6.235, 0), (6.468, 2), (6.635, 0)],

        []])
    generate_and_save_y_data("data/index_duo_press", y_name, **get_dataset_meta("data/index_duo_press", "muscle_data.npy", video_len_seconds=8.7), joint_actions=[
        [],
        [(1.033, 1), (1.333, 0), (1.467, 2), (1.633, 0), (5.802, 1), (6.002, 0), (6.068, 2), (6.602, 0)],
        [],
        [(1.067, 1), (1.333, 0), (1.433, 2), (1.567, 0), (2.333, 1), (2.500, 0), (2.667, 2), (2.833, 0), (3.600, 1), (4.033, 0), (4.200, 2), (4.333, 0), (5.533, 1), (6.368, 0), (6.368, 2), (6.535, 0)],
        [],
        [(2.300, 1), (2.573, 0), (2.667, 2), (2.833, 0)],
        [],
        [(3.733, 1), (4.167, 0), (4.200, 2), (4.400, 0)],
        [],
        [(5.668, 1), (6.302, 0), (6.335, 2), (6.535, 0)],
        []])
    generate_and_save_y_data("data/middle_duo_press", y_name, **get_dataset_meta("data/middle_duo_press", "muscle_data.npy", video_len_seconds=8.202), joint_actions=[
        [],
        [(0.867, 1), (1.167, 0), (1.333, 2), (1.600, 0)],
        [],
        [(2.367, 1), (2.700, 0), (2.767, 2), (2.900, 0), (5.600, 1), (6.502, 0), (6.535, 2), (6.702, 0)],
        [],
        [(0.833, 1), (1.200, 0), (1.400, 2), (1.533, 0), (2.367, 1), (2.700, 0), (2.767, 2), (2.900, 0), (3.800, 1), (4.133, 0), (4.167, 2), (4.367, 0), (5.533, 1), (6.002, 0), (6.535, 2), (6.735, 0)],
        [],
        [(3.800, 1), (4.133, 0), (4.167, 2), (4.300, 0)],
        [],
        [(5.433, 1), (5.802, 0), (6.502, 2), (6.768, 0)],
        []])
    generate_and_save_y_data("data/ring_duo_press", y_name, **get_dataset_meta("data/ring_duo_press", "muscle_data.npy", video_len_seconds=8.133), joint_actions=[
        [],
        [(1.00, 1), (1.300, 0), (1.376, 2), (1.733, 0)],
        [],
        [(2.800, 1), (3.267, 0), (3.433, 2), (3.633, 0)],
        [],
        [(4.6, 1), (4.833, 0), (4.967, 2), (5.133, 0)],
        [],
        [(1.033, 1), (1.300, 0), (1.467, 0), (1.667, 0), (2.933, 1), (3.233, 0), (3.400, 2), (3.600, 0), (4.533, 1), (4.733, 0), (4.933, 2), (5.133, 0), (5.935, 1), (6.235, 0), (6.302, 2), (6.535, 0)],
        [],
        [(5.835, 1), (6.302, 0), (6.302, 2), (6.535, 0)],

        []])
    generate_and_save_y_data("data/pinkie_duo_press", y_name, **get_dataset_meta("data/pinkie_duo_press", "muscle_data.npy", video_len_seconds=8.767), joint_actions=[
        [],
        [(1.200, 1), (1.467, 0), (1.533, 2), (1.867, 0)],
        [],
        [(2.867, 1), (3.133, 0), (3.333, 2), (3.533, 0)],
        [],
        [(4.467, 1), (5.467, 0), (5.7, 2), (5.868, 0)],
        [],
        [(6.968, 0), (7.335, 0), (7.502, 2), (7.668, 0)],
        [],
        [(1.200, 1), (1.633, 0), (1.667, 2), (1.900, 0), (2.9, 1), (3.133, 0), (3.267, 2), (3.500, 0), (4.80, 1), (5.067, 0), (5.668, 2), (5.835, 0), (6.502, 1), (7.235, 0), (7.468, 2), (7.702, 2)],
        []])
    generate_and_save_y_data("data/wrist", y_name, **get_dataset_meta("data/wrist", "muscle_data.npy", video_len_seconds=15.435), joint_actions=[
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [(0.367, 2), (0.867, 0), (1.0, 1), (1.8, 0), (2.267, 1), (2.7, 0), (2.867, 2), (3.567, 0), (7.102, 2), (7.735, 0), (7.835, 1), (8.302, 0), (8.768, 1), (9.235, 0), (9.435, 2), (9.902, 0)]])
    generate_and_save_y_data("data/fist", y_name, **get_dataset_meta("data/fist", "muscle_data.npy", video_len_seconds=11.167), joint_actions=[
        [(0.767, 2), (1.0, 0), (1.7, 1), (2.0, 0), (2.433, 2), (2.7, 0), (3.533, 1), (3.9, 0), (4.267, 1), (4.633, 0), (5.4, 1), (5.768, 0), (6.068, 2), (6.402, 0), (7.168, 1), (7.602, 0), (7.835, 2), (8.168, 0)],
        [(0.633, 2), (1.133, 0), (1.533, 1), (2.167, 0), (2.367, 2), (2.933, 0), (3.367, 1), (4.1, 0), (4.167, 1), (4.8, 0), (5.267, 1), (5.935, 0), (6.035, 2), (6.635, 0), (7.002, 1), (7.635, 0), (7.735, 2), (8.468, 0)],
        [(0.767, 2), (1.0, 0), (1.7, 1), (2.0, 0), (2.433, 2), (2.7, 0), (3.533, 1), (3.9, 0), (4.267, 1), (4.633, 0), (5.4, 1), (5.768, 0), (6.068, 2), (6.402, 0), (7.168, 1), (7.602, 0), (7.835, 2), (8.168, 0)],
        [(0.633, 2), (1.133, 0), (1.533, 1), (2.167, 0), (2.367, 2), (2.933, 0), (3.367, 1), (4.1, 0), (4.167, 1), (4.8, 0), (5.267, 1), (5.935, 0), (6.035, 2), (6.635, 0), (7.002, 1), (7.635, 0), (7.735, 2), (8.468, 0)],
        [(0.767, 2), (1.0, 0), (1.7, 1), (2.0, 0), (2.433, 2), (2.7, 0), (3.533, 1), (3.9, 0), (4.267, 1), (4.633, 0), (5.4, 1), (5.768, 0), (6.068, 2), (6.402, 0), (7.168, 1), (7.602, 0), (7.835, 2), (8.168, 0)],
        [(0.633, 2), (1.133, 0), (1.533, 1), (2.167, 0), (2.367, 2), (2.933, 0), (3.367, 1), (4.1, 0), (4.167, 1), (4.8, 0), (5.267, 1), (5.935, 0), (6.035, 2), (6.635, 0), (7.002, 1), (7.635, 0), (7.735, 2), (8.468, 0)],
        [(0.767, 2), (1.0, 0), (1.7, 1), (2.0, 0), (2.433, 2), (2.7, 0), (3.533, 1), (3.9, 0), (4.267, 1), (4.633, 0), (5.4, 1), (5.768, 0), (6.068, 2), (6.402, 0), (7.168, 1), (7.602, 0), (7.835, 2), (8.168, 0)],
        [(0.633, 2), (1.133, 0), (1.533, 1), (2.167, 0), (2.367, 2), (2.933, 0), (3.367, 1), (4.1, 0), (4.167, 1), (4.8, 0), (5.267, 1), (5.935, 0), (6.035, 2), (6.635, 0), (7.002, 1), (7.635, 0), (7.735, 2), (8.468, 0)],
        [(0.867, 2), (1.0, 0), (1.7, 1), (2.0, 0), (2.433, 2), (2.7, 0), (3.533, 1), (3.9, 0), (4.267, 1), (4.633, 0), (5.4, 1), (5.768, 0), (6.068, 2), (6.402, 0), (7.168, 1), (7.602, 0), (7.835, 2), (8.168, 0)],
        [(0.633, 2), (1.133, 0), (1.533, 1), (2.167, 0), (2.367, 2), (2.933, 0), (3.367, 1), (4.1, 0), (4.167, 1), (4.8, 0), (5.267, 1), (5.935, 0), (6.035, 2), (6.635, 0), (7.002, 1), (7.635, 0), (7.735, 2), (8.468, 0)],
        []])
    generate_and_save_y_data("data/pickup_ball", y_name, **get_dataset_meta("data/pickup_ball", "muscle_data.npy", video_len_seconds=4.833), joint_actions=[
        [(3.333, 2), (3.733, 0)],
        [(2.233, 2), (2.567, 0)],
        [(3.333, 2), (3.733, 0)],
        [(2.233, 2), (2.567, 0)],
        [(3.333, 2), (3.733, 0)],
        [(2.233, 2), (2.567, 0)],
        [(3.333, 2), (3.733, 0)],
        [(2.233, 2), (2.567, 0)],
        [(3.333, 2), (3.733, 0)],
        [(2.233, 2), (2.567, 0)],
        []])
    generate_and_save_y_data("data/throw_ball", y_name, **get_dataset_meta("data/throw_ball", "muscle_data.npy", video_len_seconds=4.233), joint_actions=[
        [(1.467, 1), (1.567, 0)],
        [],
        [(1.467, 1), (1.567, 0)],
        [],
        [(1.467, 1), (1.567, 0)],
        [],
        [(1.467, 1), (1.567, 0)],
        [],
        [(1.467, 1), (1.567, 0)],
        [],
        [(0.533, 1), (1.433, 0), (1.5, 2), (1.833, 0)]])
    generate_and_save_y_data("data/pickup_ball_palm", y_name, **get_dataset_meta("data/pickup_ball_palm", "muscle_data.npy", video_len_seconds=5.900), joint_actions=[
        [(3.033, 2), (3.5, 0)],
        [(2.9, 2), (3.5, 0)],
        [(3.033, 2), (3.267, 0)],
        [(2.9, 2), (3.267, 0)],
        [(3.033, 2), (3.267, 0)],
        [(2.9, 2), (3.267, 0)],
        [(3.033, 2), (3.267, 0)],
        [(2.9, 2), (3.267, 0)],
        [(3.033, 2), (3.267, 0)],
        [(2.9, 2), (3.267, 0)],
        []])
    generate_and_save_y_data("data/throw_ball_palm", y_name, **get_dataset_meta("data/throw_ball_palm", "muscle_data.npy", video_len_seconds=3.933), joint_actions=[
        [(1.033, 1), (1.567, 0)],
        [(1.033, 1), (1.567, 0)],
        [(1.033, 1), (1.567, 0)],
        [(1.033, 1), (1.567, 0)],
        [(1.033, 1), (1.567, 0)],
        [(1.033, 1), (1.567, 0)],
        [(1.033, 1), (1.567, 0)],
        [(1.033, 1), (1.567, 0)],
        [(1.033, 1), (1.567, 0)],
        [(1.033, 1), (1.567, 0)],
        [(1.033, 2), (1.567, 0)]])
    generate_and_save_y_data("data/piano", y_name, **get_dataset_meta("data/piano", "muscle_data.npy", video_len_seconds=28.97), joint_actions=[
        [],
        [(.6, 2), (.867, 0), (1.167, 2), (1.5, 0), (8.302, 2), (9.235, 0), (18.337, 2), (18.570, 0), (18.837, 2), (19.303, 0), (25.870, 2), (28.070, 0)],
        [],
        [(6.135, 2), (6.368, 0), (6.635, 2), (6.968, 0), (7.202, 2), (7.502, 0), (7.768, 2), (8.068, 0), (11.635, 2), (11.935, 0), (12.202, 2), (12.435, 0), (12.802, 2), (13.602, 0), (16.168, 2), (16.468, 0), (16.702, 2), (16.968, 0), (17.237, 2), (18.070, 0), (23.670, 2), (23.970, 0), (24.203, 2), (24.503, 0), (24.770, 2), (24.970, 0), (25.303, 2), (25.637, 0)],
        [],
        [(5.033, 2), (5.233, 0), (5.533, 2), (5.968, 0), (10.502, 2), (10.868, 0), (11.102, 2), (11.435, 0), (15.102, 2), (15.369, 0), (15.635, 2), (15.868, 0), (22.670, 2), (22.937, 0), (23.137, 2), (23.537, 0)],
        [],
        [(1.733, 2), (2.067, 0), (2.267, 2), (2.667, 0), (3.9, 2), (4.933, 0), (9.502, 2), (9.735, 0), (10.035, 2), (10.335, 0), (14.305, 2), (14.268, 0), (14.568, 2), (14.802, 0), (19.370, 2), (19.570, 0), (19.870, 2), (20.237, 0), (21.503, 2), (22.503, 0)],
        [],
        [(2.8, 2), (3.167, 0), (3.367, 2), (3.7, 0), (20.437, 2), (20.703, 0), (20.970, 2), (21.303, 0)],
        []])
